version: '3.8'

services:
  rclone:
    build:
      context: ./Dockerfile/Rclone/
    command: ["/bin/sh", "/copy_files.sh"]
    volumes:
      - shared-data:/drive
    networks:
      - my-network

  api:
    build:
      context: ./Conteneur_API
      dockerfile: ../Dockerfile/API/Dockerfile
    ports:
      - "8000:8000"  
    depends_on:
      - rclone
    volumes:
      - shared-data:/app/drive
      - data:/app/data
    command: /bin/sh -c "sleep 90 && /setup_volume.sh && uvicorn main:app --host 0.0.0.0"
    networks:
      - my-network  

  users-db:
    build:
      context: ./Conteneur_BDD_utilisateur
      dockerfile: ../Dockerfile/BDD_utilisateur/Dockerfile
    depends_on:
      - rclone
    volumes:
    - data2:/app/data2
    ports:
      - "8001:8001"  
    networks:
      - my-network

  entrainement:
    build:
      context: ./Conteneur_Entrainement
      dockerfile: ../Dockerfile/Entrainement/Dockerfile
    command: mlflow server --host 0.0.0.0 --port 5001
    depends_on:
    - rclone
    ports:
    - "5001:5001"
    volumes:
    - shared-data:/app/drive
    - ./Conteneur_Entrainement/mlflow.db:/app/mlflow.db
    - ./Conteneur_Entrainement/model_fusion_O.py:/app/mlruns/models/model_fusion_O.py
    networks:
    - my-network

  airflow:
    image: apache/airflow:2.4.0
    volumes:
      - ./Conteneur_Airflow/dags:/opt/airflow/dags
      - ./Conteneur_Airflow/logs:/opt/airflow/logs
      - ./Conteneur_Airflow/plugins:/opt/airflow/plugins
      - ./Conteneur_Airflow/airflow.cfg:/opt/airflow/airflow.cfg
      - shared-data:/app/drive
      - data:/app/data 
      - data2:/app/data2
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
      airflow scheduler & 
      airflow webserver"
    networks:
      - my-network

volumes:
  shared-data:
    driver: local
  data:
    driver: local
  data2:
    driver: local

networks:
  my-network:
    driver: bridge




  
